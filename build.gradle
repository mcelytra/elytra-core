plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group = 'org.mcelytra'
version = '1.0.0-SNAPSHOT'

sourceCompatibility = 8

ext.moduleName = 'org.mcelytra.core'

compileJava.options.encoding = 'UTF-8'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url = 'https://hub.spigotmc.org/nexus/content/groups/public/' }
    maven { url = 'https://aperlambda.github.io/maven' }
    maven { url = 'https://mcelytra.github.io/maven/' }
    maven { url = 'https://libraries.minecraft.net/' }
}

dependencies {
    compile 'org.mcelytra:elytra-chat:1.0.0-SNAPSHOT'
    compile 'com.electronwill.night-config:toml:3.5.3'
    compile 'io.netty:netty-all:4.1.34.Final'
    compile 'org.apache.logging.log4j:log4j-core:2.11.1'
    compile 'com.mojang:authlib:1.5.25'
}

javadoc {
    inputs.property("moduleName", moduleName)
    doFirst {
        exclude "**/module-info.java"
        options.addStringOption('XDignore.symbol.file', '-html5')
        options.addStringOption('-module-path', classpath.asPath)
    }
}

jar {
    from 'LICENSE'
    inputs.property("moduleName", moduleName)
    manifest {
        attributes('Automatic-Module-Name': moduleName)
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

publishing {
    publications {
        elytracore(MavenPublication) {
            from components.java
            artifactId = 'elytra-core'

            artifact sourcesJar
            artifact javadocJar
        }
    }
    repositories {
        maven {
            url "$buildDir/repo"
        }
    }
}
